# Azure DevOps Pipeline with Veracode CLI Upload and Scan

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  CLI_FOLDER: "veracode"
  ARTIFACTS_FOLDER: "$(System.DefaultWorkingDirectory)/veracode-artifacts"
#  SCAN_FILE: "$(ARTIFACTS_FOLDER)/veracode-auto-pack-verademo-python-python.zip"
  SCAN_FILE: "$(ARTIFACTS_FOLDER)"
  VERACODE_API_ID: "$(VERACODE_API_ID)"  # Set this as a secret variable in Azure DevOps
  VERACODE_API_KEY: "$(VERACODE_API_KEY)"  # Set this as a secret variable in Azure DevOps

steps:
# Step 1: Greet the world
- script: echo Hello, world!
  displayName: 'Run a one-line script'

# Step 2: Clone the repository
- script: |
    echo "Cloning the repository: verademo-python"
    mkdir -p clonePath
    cd clonePath
    git clone https://github.com/eddemo0007/verademo-python.git
  displayName: 'Clone Repository: verademo-python'

# Step 3: Install Veracode CLI
- script: |
    echo "Installing Veracode CLI"
    curl -fsS https://tools.veracode.com/veracode-cli/install | sh
    echo "Veracode CLI installed successfully."
    ls -lh # Check installed files
  displayName: 'Install Veracode CLI'

# Step 4: Package the source code for Veracode scanning
#     ./veracode package --source clonePath/verademo-python/* --output $(ARTIFACTS_FOLDER) --trust --debug
- script: |
    echo "Packaging source code for Veracode scan"
    mkdir -p $(ARTIFACTS_FOLDER)
    ./veracode package --source clonePath/verademo-python/* --output $(ARTIFACTS_FOLDER) --trust
  displayName: 'Package Source Code for Veracode'

# Step: List Contents of the Artifacts Folder
- script: |
    echo "Listing contents of the artifacts folder"
    ls -lh $(ARTIFACTS_FOLDER)
  displayName: 'List Contents of Artifacts Folder'
  
# Step 5: Upload and Scan with Veracode
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '58902f130e5dc212f83b1da108928b56'
    apiKey: '1d282d5563c46035ab74e78befed3169d8be0e098a477321e27b629a88d82439cd00c3338d9cfccb87eae3b11276fa405f01dedb1855845fdd60bb3aaab58859'
    veracodeAppProfile: 'verademo-python'
    version: '$(build.buildNumber)'
    filepath: '$(SCAN_FILE)'
    createProfile: true
    maximumWaitTime: '360'

# Step 6: Publish artifacts (optional)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(ARTIFACTS_FOLDER)'
    artifactName: 'veracode-artifacts'
    publishLocation: 'Container'
  displayName: 'Publish Veracode Artifacts'
